// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace XamarinAzureAD.Droid.Models
{
    public partial class UserInfo
    {
        private string _displayableId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string DisplayableId
        {
            get { return this._displayableId; }
            set { this._displayableId = value; }
        }
        
        private string _familyName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string FamilyName
        {
            get { return this._familyName; }
            set { this._familyName = value; }
        }
        
        private string _givenName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string GivenName
        {
            get { return this._givenName; }
            set { this._givenName = value; }
        }
        
        private string _identityProvider;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string IdentityProvider
        {
            get { return this._identityProvider; }
            set { this._identityProvider = value; }
        }
        
        private string _passwordChangeUrl;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PasswordChangeUrl
        {
            get { return this._passwordChangeUrl; }
            set { this._passwordChangeUrl = value; }
        }
        
        private string _passwordExpiresOn;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PasswordExpiresOn
        {
            get { return this._passwordExpiresOn; }
            set { this._passwordExpiresOn = value; }
        }
        
        private string _uniqueId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string UniqueId
        {
            get { return this._uniqueId; }
            set { this._uniqueId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the UserInfo class.
        /// </summary>
        public UserInfo()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken displayableIdValue = inputObject["DisplayableId"];
                if (displayableIdValue != null && displayableIdValue.Type != JTokenType.Null)
                {
                    this.DisplayableId = ((string)displayableIdValue);
                }
                JToken familyNameValue = inputObject["FamilyName"];
                if (familyNameValue != null && familyNameValue.Type != JTokenType.Null)
                {
                    this.FamilyName = ((string)familyNameValue);
                }
                JToken givenNameValue = inputObject["GivenName"];
                if (givenNameValue != null && givenNameValue.Type != JTokenType.Null)
                {
                    this.GivenName = ((string)givenNameValue);
                }
                JToken identityProviderValue = inputObject["IdentityProvider"];
                if (identityProviderValue != null && identityProviderValue.Type != JTokenType.Null)
                {
                    this.IdentityProvider = ((string)identityProviderValue);
                }
                JToken passwordChangeUrlValue = inputObject["PasswordChangeUrl"];
                if (passwordChangeUrlValue != null && passwordChangeUrlValue.Type != JTokenType.Null)
                {
                    this.PasswordChangeUrl = ((string)passwordChangeUrlValue);
                }
                JToken passwordExpiresOnValue = inputObject["PasswordExpiresOn"];
                if (passwordExpiresOnValue != null && passwordExpiresOnValue.Type != JTokenType.Null)
                {
                    this.PasswordExpiresOn = ((string)passwordExpiresOnValue);
                }
                JToken uniqueIdValue = inputObject["UniqueId"];
                if (uniqueIdValue != null && uniqueIdValue.Type != JTokenType.Null)
                {
                    this.UniqueId = ((string)uniqueIdValue);
                }
            }
        }
    }
}
